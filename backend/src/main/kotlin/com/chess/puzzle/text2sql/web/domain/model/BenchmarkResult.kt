package com.chess.puzzle.text2sql.web.domain.model

import kotlinx.serialization.Serializable

/**
 * Represents the list of generated SQL statements for a given text by the Full, Partial, and
 * Baseline Text2SQL models.
 *
 * This class is used for benchmarking purposes and for writing into a `benchmarkResult.json` file.
 * The text was used to challenge the Text2SQL model. See
 * [com.chess.puzzle.text2sql.web.entities.BenchmarkEntry].
 *
 * ### Text2SQL Models and Ablation Test
 * In this web application, the Text2SQL process is supported by two key functions:
 * 1. **Finding Similar Demonstrations**: Identifying similar examples to improve the model's
 *    understanding of the query.
 * 2. **Schema Masking**: Masking database-specific keywords to improve the model's generalization.
 *
 * To evaluate the effectiveness of these functions, an ablation test was performed using three
 * models:
 * - **Full Model**: Combines both finding similar demonstrations and schema masking.
 * - **Partial Model**: Includes finding similar demonstrations but excludes schema masking.
 * - **Baseline Model**: Represents the simplest model without any additional functions.
 *
 * ### Purpose of This Class
 * - **Benchmarking**: Compares the accuracy of SQL statements generated by the Full, Partial, and
 *   Baseline models.
 * - **Result Storage**: Writes the results into a `benchmarkResult.json` file for further analysis.
 */
@Serializable
data class BenchmarkResult(
    /**
     * The natural question used to challenge the Text2SQL models.
     *
     * This text is the input used to generate SQL statements by the Full, Partial, and Baseline
     * models.
     *
     * @sample "Find puzzles with a knight sacrifice in the endgame."
     * @sample "Give me a puzzle where the player must defend against the Sicilian Defense."
     * @sample "Show me a puzzle with a high rating and a popular theme."
     * @see [com.chess.puzzle.text2sql.web.entities.BenchmarkEntry]
     */
    val text: String,

    /**
     * The SQL result generated by the Full Text2SQL model.
     *
     * The Full model involves finding similar demonstrations and schema masking. This model is
     * expected to generate the most accurate SQL statements.
     */
    val full: SqlResult,

    /**
     * The SQL result generated by the Partial Text2SQL model.
     *
     * The Partial model involves finding similar demonstrations but does not include schema
     * masking. This model is expected to generate SQL statements with less accuracy compared to the
     * Full model.
     */
    val partial: SqlResult,

    /**
     * The SQL result generated by the Baseline Text2SQL model.
     *
     * The Baseline model is the simplest model and does not involve finding similar demonstrations
     * or schema masking. This model is used as a baseline for comparison.
     */
    val baseline: SqlResult,
)
